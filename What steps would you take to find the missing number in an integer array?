(Using Hashing): The idea behind the following approach is

The numbers will be in the range (1, N), an array of size N can be maintained to keep record of the elements present in the given array

* Create a temp array temp[] of size n + 1 with all initial values as 0.
* Traverse the input array arr[], and do following for each arr[i] 
* if(temp[arr[i]] == 0) temp[arr[i]] = 1 
Traverse temp[] and output the array element having value as 0 (This is the missing element).

#include <stdio.h>
 
void findMissing(int arr[], int N)
{
    int temp[N + 1];
    for (int i = 0; i <= N; i++) {
        temp[i] = 0;
    }
 
    for (int i = 0; i < N; i++) {
        temp[arr[i] - 1] = 1;
    }
 
    int ans;
    for (int i = 0; i <= N; i++) {
        if (temp[i] == 0)
            ans = i + 1;
    }
    printf("%d", ans);
}
 
int main()
{
    int arr[] = { 1, 3, 7, 5, 6, 2 };
    int n = sizeof(arr) / sizeof(arr[0]);
    findMissing(arr, n);
}
