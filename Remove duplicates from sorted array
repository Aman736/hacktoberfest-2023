Remove duplicates from the sorted array 

Approach : 
* Create an auxiliary array temp[] to store unique elements.
* Traverse input array and one by one copy unique elements of arr[] to temp[]. Also keep track of count of unique elements. Let this count be j.
* Copy j elements from temp[] to arr[] and return j

#include <iostream>
using namespace std;
 
int removeDuplicates(int arr[], int n)
{
    if (n == 0 || n == 1)
        return n;
 
    int temp[n];
    int j = 0;
  
    for (int i = 0; i < n - 1; i++)
        if (arr[i] != arr[i + 1])
            temp[j++] = arr[i];
 
    temp[j++] = arr[n - 1];
 
    for (int i = 0; i < j; i++)
        arr[i] = temp[i];
 
    return j;
}
 
int main()
{
    int arr[] = { 1, 2, 2, 3, 4, 4, 4, 5, 5 };
    int n = sizeof(arr) / sizeof(arr[0]);
 
    n = removeDuplicates(arr, n);
 
    for (int i = 0; i < n; i++)
        cout << arr[i] << " ";
 
    return 0;
}
